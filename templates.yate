module "main"

include "node_modules/noscript/yate/noscript.yate"
include "node_modules/noscript-bosphorus/noscript-bosphorus.yate"

match .head ns-view-add-class {
    " island head"
}

match .head ns-view-content {
    "Шапка: она не меняется от страницы к странице"
}

match .content ns-view-add-class {
    " island"
}

// 1. Index page.
match .index ns-view-content {
    "Это индекс страница. На ней ничего нет."
    <br/>
    <br/>
    "Зато можно перейти к "
    <a href="{ ns-url('/photos') }">следующей странице</a>
    "."
}

// 2. Photo list page.

// Special wrapper.
// Used to pass extra parameter to nested photos view.
match .photos-extra ns-view-desc {
    apply /.views.photos ns-view ( 1 )
}

// Override default template - add parameter for customization with default value set.
// We cannot call ns-view-call-scalar here directly because we here / is set to
// caller root (in our case / === photos-extra).
// So we pass extra parameter deeper.
match .photos ns-view (scalar extra = 0) {
    apply document(.).tree.* ns-build-view (extra)
}

// Override default template and add extra parameter here also.
// So here we can call view method and remember that this is a special view instance.
match .photos ns-build-view (scalar extra = 0) {
    ns-view-call-scalar('setExtraOnce', extra)
    <div>
        apply . ns-build-view-content
    </div>
}

match .photos ns-view-collection {
    "К примеру, вот фотки:"
    <br/>
    apply /.views.ns-view-collection-container.* ns-view
    " [extra={ns-view-call-scalar('getExtra')}]"
}

match .photos-item ns-view-add-class {
    " image-thumb"
}

match .photos-item ns-view-content {
    // Use helper when you need some model: model(id).
    photo = model('photo')

    <a href="{ ns-url('/photos/' + photo.id) }">
        <img src="{ photo.url_ }XXS"/>
    </a>
}

// 3. Single photo page.
match .photo-preview ns-view-content {
    "А вот и превью:"
    <br/>
    <br/>
    <img src="{ model('photo').url_ }L"/>
}
